AWSTemplateFormatVersion: "2010-09-09"
Description: ---
Parameters:
  TargetVpc:
    Description: Target VPC ID.
    Type: String
    Default: vpc-3b4cab5d
  PrivateSubnetOne:
    Description: Private Subnet 1 ID
    Type: String
    Default: subnet-b461c1fc
  ClientAMI:
    Description: Client AMI
    Default: ami-07b4f72c4c356c19d
    Type: AWS::EC2::Image::Id
  KeyPairVM:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  KafkaClientInstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref TargetVpc
  KafkaClientEC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t3.small
      KeyName: !Ref KeyPairVM
      IamInstanceProfile: !Ref EC2InstanceProfile
      SubnetId: !Ref PrivateSubnetOne
      SecurityGroupIds: 
        - !Ref KafkaClientInstanceSecurityGroup
      ImageId: !Ref ClientAMI
      UserData:
        Fn::Base64: |
          #cloud-config
          package_update: true
          package_upgrade: true
          runcmd:
          - amazon-linux-extras enable corretto8
          - yum update -y 
          - yum install python3.7 -y
          - yum install java-1.8.0-amazon-corretto -y
          - yum erase awscli -y
          - cd /home/ec2-user
          - echo "export PATH=.local/bin:$PATH" >> .bash_profile
          - mkdir kafka
          - mkdir mm
          - cd kafka
          - wget https://archive.apache.org/dist/kafka/2.8.1/kafka_2.12-2.8.1.tgz
          - tar -xzf kafka_2.12-2.8.1.tgz
          - cd kafka_2.12-2.8.1/libs
          - sudo wget https://github.com/aws/aws-msk-iam-auth/releases/download/v1.1.1/aws-msk-iam-auth-1.1.1-all.jar
          - cd ../bin
          - touch client.properties
          - cd /home/ec2-user
          - wget https://bootstrap.pypa.io/get-pip.py
          - su -c "python3.7 get-pip.py --user" -s /bin/sh ec2-user
          - su -c "/home/ec2-user/.local/bin/pip3 install boto3 --user" -s /bin/sh ec2-user
          - su -c "/home/ec2-user/.local/bin/pip3 install awscli --user" -s /bin/sh ec2-user
          - chown -R ec2-user ./kafka
          - chgrp -R ec2-user ./kafka
          - chown -R ec2-user ./mm
          - chgrp -R ec2-user ./mm
          write_files:
          - path: /home/ec2-user/kafka/kafka_2.12-2.8.1/bin/client.properties
            permissions: 0644
            owner: root
            content: |
              security.protocol=SASL_SSL
              sasl.mechanism=AWS_MSK_IAM
              sasl.jaas.config=software.amazon.msk.auth.iam.IAMLoginModule required;
              sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler

  EC2Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonMSKFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              Effect: Allow
              Action:
                - kafka-cluster:CreateTopic
                - kafka-cluster:ReadData
                - kafka-cluster:DescribeTopic
                - kafka-cluster:Connect
                - kafka-cluster:WriteData
              Resource: "*"
          PolicyName: hoge-client-policy
  EC2InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: EC2MSKCFProfile
      Roles:
        - !Ref EC2Role
Outputs:
  KafkaClientInstanceSecurityGroup:
    Value: !Ref KafkaClientInstanceSecurityGroup